.. currentmodule:: edzed

.. role:: strike
  :class: strike

=========
Changelog
=========

Version numbers are based on the release date (Y.M.D).


21.10.27
========
- add an :class:`InitAsync` block
- add a :class:`NotIfInitialized` event filter
- accept unabbreviated mode names in :class:`OutputAsync`,
  e.g. ``mode='w'`` can be now written as ``mode='wait'``
  for better code readability
- remove the *desc* parameter and attribute in :class:`Block`;
  they were replaced by *comment* and deprecated in 21.3.16

21.5.15
=======
**first production/stable release**

- no significant changes

21.5.8
======
**stable release candidate**

- make the automatically created block names more descriptive
- convert :class:`And` and :func:`Or` to classes for better type indentification
- in :meth:`CBlock.connect` remove the shortcut feature, i.e.
  ``name='name'`` must be written in full
- increase the reliability of "flaky" timing tests

21.5.1
======
It was decided to revoke the "release candidate" status.

- In :class:`OutputAsync`:

  - replace the optional parameter *qmode* with mandatory *mode*
  - add a new operation mode
  - treat discarded events and cancelled tasks equally
  - do not prohibit event generation for *stop_data*

- fix an error handling issue concerning async block init and async block stop
- add :class:`And` and :class:`Or` blocks, rename ``Invert`` to :class:`Not`
- add :meth:`DataEdit.add_output`

21.4.22
=======
:strike:`stable release candidate`

- add :class:`IfOutput` event filter
- rewrite and document the :ref:`name to block resolver<Name to block resolver>`

21.4.19
=======
- add new exceptions :exc:`EdzedUnknownEvent` and :exc:`EdzedCircuitError`
- add :class:`InExecutor`
- make the interfacing of :class:`OutputFunc` and :class:`OutputAsync`
  with output functions more flexible
- allow chaining of :class:`DataEdit` methods
- replace ``AddonAsync._task_wrapper()`` with :meth:`AddonAsync._create_monitored_task`

21.4.8
======
- make sure :meth:`CBlock.stop`/:meth:`SBlock.stop` and :meth:`SBlock.stop_async`
  (if defined) are called only if matching ``Block.start()`` was called
- prohibit output events when an :class:`OutputFunc` or :class:`OutputAsync`
  block processes its *stop_value*
- events in :class:`Counter` return the new counter value
- add ``'reset'`` event to :class:`Counter`

21.4.4
======
- rename ``DataEdit.default`` to :class:`DataEdit.setdefault`
- :meth:`DataEdit.modify` can remove a data item
- ``'put'`` events handled by :class:`OutputFunc` return a value
- add *on_cancel* parameter to :class:`OutputAsync`
- add ``'arg'`` data item to events generated by :class:`OutputAsync`


.. note:: See the git repository for older releases.

2020.2.11
=========

First public release.

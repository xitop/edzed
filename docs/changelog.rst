.. currentmodule:: edzed

.. role:: strike
 :class: strike

=========
Changelog
=========

Version numbers are based on the release date (Y.M.D).

21.5.15
=======
**first production/stable release**

- no significant changes

21.5.8
======
**stable release candidate**

- make the automatically created block names more descriptive
- convert :class:`And` and :func:`Or` to classes for better type indentification
- in :meth:`CBlock.connect` remove the shortcut feature, i.e.
  ``name='name'`` must be written in full
- increase the reliability of "flaky" timing tests

21.5.1
======
It was decided to revoke the "release candidate" status.

- In :class:`OutputAsync`:

  - replace optional parameter *qmode* with mandatory *mode*
  - add a new operation mode
  - treat discarded events and cancelled tasks equally
  - do not prohibit event generation for *stop_data*

- fix an error handling issue concerning async block init and async block stop
- add :class:`And` and :class:`Or` blocks, rename ``Invert`` to :class:`Not`
- add :meth:`DataEdit.add_output`

21.4.22
=======
:strike:`stable release candidate`

- add :class:`IfOutput` event filter
- rewrite and document the :ref:`name to block resolver<Name to block resolver>`

21.4.19
=======
- add new exceptions :exc:`EdzedUnknownEvent` and :exc:`EdzedCircuitError`
- add :class:`InExecutor`
- make the interfacing of :class:`OutputFunc` and :class:`OutputAsync`
  with output functions more flexible
- allow chaining of :class:`DataEdit` methods
- replace ``AddonAsync._task_wrapper()`` with :meth:`AddonAsync._create_monitored_task`

21.4.8
======
- make sure :meth:`CBlock.stop`/:meth:`SBlock.stop` and :meth:`SBlock.stop_async`
  (if defined) are called only if matching ``Block.start()`` was called
- prohibit output events when an :class:`OutputFunc` or :class:`OutputAsync`
  block processes its *stop_value*
- events in :class:`Counter` return the new counter value
- add ``'reset'`` event to :class:`Counter`

21.4.4
======
- rename ``DataEdit.default`` to :class:`DataEdit.setdefault`
- :meth:`DataEdit.modify` can remove a data item
- ``'put'`` events handled by :class:`OutputFunc` return a value
- add *on_cancel* parameter to :class:`OutputAsync`
- add ``'arg'`` data item to events generated by :class:`OutputAsync`

21.3.29
=======
- include ``'trigger'`` in the event data generated by edzed blocks
- add ``on_every_output`` parameter to :class:`SBlock`

21.3.25
=======
- all documented utilities are now provided by ``edzed.utils``
  and should be imported from there
- fixed an issue with :attr:`FSM.sdata` erroneously restored from
  an expired saved state
- :class:`InputExp` was rewritten

21.3.16
=======
- :attr:`Block.comment` replaces the ``Block.desc``;
  the old name will be supported for next 3 months at least
- added :class:`AddonAsyncInit`
- repetition count limit was added to :class:`Repeat`
- automatic event repeat was added to :class:`Event`

21.3.6
======
- *on_error* must be explicitly set when creating :class:`OutputFunc` or :class:`OutputAsync`
  blocks (incompatible change); the changes are summarized :ref:`here<Error handling>`
- parameters specifying events to be sent (``on_xxx=...``) accept ``None``
- :class:`Event`\'s *efilter* parameter accepts ``None``
- :class:`ControlBlock`\'s event ``error`` was renamed to ``abort``
- simulator debug messages are controlled with :attr:`Circuit.debug`
- block debug messages are logged at the ``DEBUG`` level
- old block logging methods were replaced by :meth:`Block.log_msg` and its wrappers


.. note:: See the git repository for older releases.


2020.2.11
=========

First public release.
